Bootstrap: shub
From: shub://drneavin/SingularityBaseImages:r363_python368
%environment
    export PATH=/opt/DoubletDetection/:/opt/popscle/bin/:/opt:/opt/scSplit:/usr/games:/opt/bedtools2/bin:/opt/conda/envs/py36/bin:/opt/souporcell:/opt/souporcell/troublet/target/release:/opt/conda/bin:/opt/minimap2-2.7:/root/.cargo/bin:/opt/vartrix-v1.1.3-x86_64-linux/:/opt/freebayes/scripts:/opt/freebayes:/opt/vcflib/bin:/opt/vcflib/scripts:$PATH
    export PYTHONPATH=/opt/conda/envs/py36/lib/python3.6/site-packages/
    export LC_ALL=C 
    alias python=python3

%post 
    #!/bin/bash
    eval "$(command conda 'shell.bash' 'hook' 2> /dev/null)"
    export PATH=/opt/conda/bin/:$PATH
    apt update
    yes | apt upgrade
    # yes | apt-get install build-essential
    # apt-get install -y gcc-7 g++-7 gfortran-7 libgfortran-7-dev
    # update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7
    # update-alternatives --config gcc
    # gcc --version
    # yes | apt-get install wget
    # yes | apt-get install curl
    # apt install -y dirmngr --install-recommends
    # apt install -y software-properties-common
    # apt install -y apt-transport-https
    # add-apt-repository 'deb http://deb.debian.org/debian buster-backports main'
    # yes | apt-get update
    # yes | apt-get upgrade
    # apt install -y ca-certificates gnupg2
    # apt-key adv --keyserver keys.gnupg.net --recv-key 'E19F5F87128899B192B1A2C2AD5F960A256A04AF'
    # add-apt-repository 'deb https://cloud.r-project.org/bin/linux/debian buster-cran35/'
    # apt-get update
    # apt install -y r-base
    # apt install -y r-base-dev
    # apt-get update
    # apt-get install -y libv8-dev
    # apt-get update

    # yes | /opt/conda/bin/conda create -n py36 python=3.6.8
    # cd /opt
    # CARGO_HOME=/opt/.cargo RUSTUP_HOME=/opt/.cargo bash -c 'curl https://sh.rustup.rs -sSf | sh -s -- -y'
    #     . /opt/.cargo/env
    #     which cargo
    #     rustup default stable
    # yes | apt-get install git
    # /opt/conda/bin/conda init bash
    # eval "$(conda shell.bash hook)"
    # conda activate py36
    #     yes | apt-get install libncurses5-dev
    #     yes | apt-get install zlib1g-dev
    #     yes | apt-get install libbz2-dev
    #     yes | apt-get install liblzma-dev
    #     yes | apt-get install cmake
    #     yes | apt-get install zlib1g
    #     yes | apt-get install zlib1g-dev
    #     apt-get install -y pkg-config
    #     apt-get install -y libcurl4-openssl-dev
    #     apt-get install -y graphviz
    #     apt-get install -y graphviz-dev
    #     apt-get install -y libxml2
    #     apt-get install -y libxml2-dev
    #     apt-get install -y bzip2
    #     apt-get install -y libssl-dev

        cd /opt
        git clone https://github.com/JonathanShor/DoubletDetection.git
        cd DoubletDetection
         /opt/conda/envs/py36/bin/pip install .

        # yes | /opt/conda/envs/py36/bin/pip install pysam
        #  /opt/conda/envs/py36/bin/pip install pyvcf
        #  /opt/conda/envs/py36/bin/pip install numpy
        #  /opt/conda/envs/py36/bin/pip install scipy
        #  /opt/conda/envs/py36/bin/pip install pystan==2.17.1.0
        #  /opt/conda/envs/py36/bin/pip install pyfaidx
        #  /opt/conda/envs/py36/bin/pip install scikit-learn
        #  /opt/conda/envs/py36/bin/pip install pandas
        #  /opt/conda/envs/py36/bin/pip install matplotlib
        #  /opt/conda/envs/py36/bin/pip install scikit-image
        #  /opt/conda/envs/py36/bin/pip install numba
        #  /opt/conda/envs/py36/bin/pip install annoy
        #  /opt/conda/envs/py36/bin/pip install umap-learn
        #  /opt/conda/envs/py36/bin/pip install scrublet
        #  /opt/conda/envs/py36/bin/pip install h5py
        #  /opt/conda/envs/py36/bin/pip install snakemake
        #  /opt/conda/envs/py36/bin/pip install Jinja2


        cd /opt
        wget --no-check-certificate 'https://docs.google.com/uc?export=download&id=1QVUBY01g7NZSWpdjB6b6ubjBNEcWArcM' -O scrublet_pipeline.py
    
    cd /opt
    wget http://ftp.gnu.org/gnu/parallel/parallel-latest.tar.bz2
        tar xjf parallel-latest.tar.bz2
        cd parallel-*
        ./configure && make
        yes | make install

    cp /opt/conda/lib/libstdc++.so.6.0.26 /usr/lib/x86_64-linux-gnu/
    mv /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /usr/lib/x86_64-linux-gnu/libstdc++.so.6.bkp
    ln -s /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.26 /usr/lib/x86_64-linux-gnu/libstdc++.so.6


    # R --slave -e 'install.packages("V8", repos = "http://cran.us.r-project.org")'
    # R --slave -e 'install.packages("rversions", repos = "http://cran.us.r-project.org")'
    # R --slave -e 'install.packages("devtools", repos = "http://cran.us.r-project.org")'
    # R --slave -e 'install.packages("tidyverse", repos = "http://cran.us.r-project.org")'
    # R --slave -e 'install.packages("data.table", repos = "http://cran.us.r-project.org")'
    # R --slave -e 'install.packages("Seurat", repos = "http://cran.us.r-project.org")'
    # R --slave -e 'install.packages("remotes", repos = "http://cran.us.r-project.org")'

    R --slave -e 'devtools::install_github("EDePasquale/DoubletDecon")'
    R --slave -e 'remotes::install_github("chris-mcginnis-ucsf/DoubletFinder")'
    # R --slave -e 'devtools::install_github("kostkalab/scds", ref="master")'
    # R --slave -e 'install.packages("BiocManager")'
    R --slave -e 'BiocManager::install("DeconRNASeq")'
    R --slave -e 'BiocManager::install("clusterProfiler")'
    R --slave -e 'install.packages("MCL", repos = "http://cran.us.r-project.org")'
    R --slave -e 'BiocManager::install("mygene")'
    # R --slave -e 'install.packages("R.utils", repos = "http://cran.us.r-project.org")'
    # R --slave -e 'install.packages("foreach", repos = "http://cran.us.r-project.org")'
    # R --slave -e 'install.packages("doParallel", repos = "http://cran.us.r-project.org")'
    # R --slave -e 'install.packages("locfit", repos = "http://cran.us.r-project.org")'
    R --slave -e 'BiocManager::install("DropletUtils")'
    R --slave -e 'BiocManager::install("scDblFinder")'

    sed -i 's/louvain.set_rng_seed(random_state)/partition_kwargs["seed"] = random_state/g'  /opt/conda/envs/py36/lib/python3.6/site-packages/scanpy/tools/_louvain.py

    yes | conda install pytorch torchvision cudatoolkit=10.2 -c pytorch
#    /opt/conda/envs/py36/bin/pip install solo-sc
    cd /opt
    yes | git clone https://github.com/calico/solo.git && cd solo && /opt/conda/envs/py36/bin/pip install -e .
    echo 'export MKL_THREADING_LAYER=GNU' >> $SINGULARITY_ENVIRONMENT


%labels 
    Author Drew Neavin
